---
- name: Kubernetes Apps | Check cluster settings for MetalLB
  fail:
    msg: "MetalLB require kube_proxy_strict_arp = , see https://github.com/danderson/metallb/issues/153#issuecomment-518651132"
  when:
    - "kube_proxy_mode == 'ipvs' and kube_proxy_strict_arp"

- name: Kubernetes Apps | Check cluster settings for MetalLB
  fail:
    msg: "metallb_ip_range is mandatory to be specified for MetalLB"
  when:
    - metallb_ip_range is not defined or not metallb_ip_range

- name: Kubernetes Apps | Check BGP peers for MetalLB
  fail:
    msg: "metallb_peers is mandatory when metallb_protocol is bgp"
  when:
    - metallb_protocol == 'bgp' and metallb_peers is not defined

- name: Kubernetes Apps | Check AppArmor status
  command: which apparmor_parser
  register: apparmor_status
  when:
    - podsecuritypolicy_enabled
    - inventory_hostname == groups['kube-master'][0]
  failed_when: false

- name: Kubernetes Apps | Set apparmor_enabled
  set_fact:
    apparmor_enabled: "{{ apparmor_status.rc == 0 }}"
  when:
    - podsecuritypolicy_enabled
    - inventory_hostname == groups['kube-master'][0]

- name: Kubernetes Apps | Lay Down MetalLB
  become: true
  template: { src: "{{ item }}.j2", dest: "{{ kube_config_dir }}/{{ item }}" }
  with_items: ["metallb.yml"]
  register: "rendering"
  when:
    - "inventory_hostname == groups['kube-master'][0]"

- name: Kubernetes Apps | Install and configure MetalLB
  kube:
    name: "MetalLB"
    kubectl: "{{ bin_dir }}/kubectl"
    filename: "{{ kube_config_dir }}/metallb.yml"
    wait: true
    state: "{{ item.changed | ternary('latest','present') }}"
  with_items: "{{ rendering.results }}"
  become: true
  when:
    - "inventory_hostname == groups['kube-master'][0]"

- name: Kubernetes Apps | Lay Down IP Pool
  become: true
  template: { src: "{{ item }}.j2", dest: "{{ kube_config_dir }}/{{ item }}" }
  with_items: ["ip-pool.yml"]
  register: "ippool"
  when:
    - "inventory_hostname == groups['kube-master'][0]"

- name: Kubernetes Apps | Wait metallb controller ready
  kube:
    kubectl: "{{ bin_dir }}/kubectl"
    resource: "controller"
    namespace: "metallb-system"
    state: "running"
  become: true
  when:
    - "inventory_hostname == groups['kube-master'][0]" 
  register: waitresult
  until: "waitresult is not failed"
  retries: 10
  delay: 10   

- name: Kubernetes Apps | Config Metallb IP Pool
  kube:
    name: "MetalLB"
    kubectl: "{{ bin_dir }}/kubectl"
    filename: "{{ kube_config_dir }}/ip-pool.yml"
    wait: true
    state: "{{ item.changed | ternary('latest','present') }}"
  become: true
  with_items: "{{ ippool.results }}"
  when:
    - "inventory_hostname == groups['kube-master'][0]"

